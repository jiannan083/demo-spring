代理模式很简单，只要记住以下关键点，简单易实现:委托类即真正的实现类
　　　　（1）代理类与委托类实现同一接口
　　　　（2）在委托类中实现功能，在代理类的方法中中引用委托类的同名方法
　　　　（3）外部类调用委托类某个方法时，直接以接口指向代理类的实例，这正是代理的意义所在：屏蔽。

　　代理模式场景描述：
　　　　（1）当我们想要隐藏某个类时，可以为其提供代理类
　　　　（2）当一个类需要对不同的调用者提供不同的调用权限时，可以使用代理类来实现（代理类不一定只有一个，
            我们可以建立多个代理类来实现，也可以在一个代理类中金进行权限判断来进行不同权限的功能调用）
　　　　（3）当我们要扩展某个类的某个功能时，可以使用代理模式，在代理类中进行简单扩展
           （只针对简单扩展，可在引用委托类的语句之前与之后进行）

代理模式虽然实现了调用者与委托类之间的强耦合，但是却增加了代理类与委托类之间的强耦合
（在代理类中显式调用委托类的方法），而且增加代理类之后明显会增加处理时间，拖慢处理时间。